!function(e){if("undefined"!=typeof n)return n;var n={},r=window.crypto||window.msCrypto;r.subtle&&(n.signAlgorithm={name:"RSASSA-PKCS1-v1_5",hash:{name:"SHA-256"}},n.generateRSAKey=function(){var e={name:"RSASSA-PKCS1-v1_5",hash:{name:"SHA-256"},modulusLength:2048,extractable:!0,publicExponent:new Uint8Array([1,0,1])};return new Promise(function(n){var t=r.subtle.generateKey(e,!0,["sign","verify"]);t.then(function(e){n(e)})})},n.arrayBufferToBase64String=function(e){for(var n=new Uint8Array(e),r="",t=0;t<n.byteLength;t++)r+=String.fromCharCode(n[t]);return btoa(r)},n.base64StringToArrayBuffer=function(e){for(var n=atob(e),r=new Uint8Array(n.length),t=0;t<n.length;t++)r[t]=n.charCodeAt(t);return r.buffer},n.textToArrayBuffer=function(e){for(var n=unescape(encodeURIComponent(e)),r=new Uint8Array(n.length),t=0;t<n.length;t++)r[t]=n.charCodeAt(t);return r},n.arraySignatureToBase64=function(e){return btoa(String.fromCharCode.apply(null,new Uint8Array(e)))},n.convertBinaryToPem=function(e,r){for(var t=n.arrayBufferToBase64String(e),o="-----BEGIN "+r+"-----\r\n",i=0;i<t.length;)o+=i+64<=t.length?t.substr(i,64)+"\r\n":t.substr(i)+"\r\n",i+=64;return o+="-----END "+r+"-----\r\n"},n.convertPemToBinary=function(e){for(var r=e.split("\n"),t="",o=0;o<r.length;o++)r[o].trim().length>0&&r[o].indexOf("-BEGIN RSA PRIVATE KEY-")<0&&r[o].indexOf("-BEGIN RSA PUBLIC KEY-")<0&&r[o].indexOf("-END RSA PRIVATE KEY-")<0&&r[o].indexOf("-END RSA PUBLIC KEY-")<0&&(t+=r[o].trim());return n.base64StringToArrayBuffer(t)},n.importPublicKey=function(e){return new Promise(function(t){var o=r.subtle.importKey("spki",n.convertPemToBinary(e),n.signAlgorithm,!0,["verify"]);o.then(function(e){t(e)})})},n.importPrivateKey=function(e){return new Promise(function(t){var o=r.subtle.importKey("pkcs8",n.convertPemToBinary(e),n.signAlgorithm,!0,["sign"]);o.then(function(e){t(e)})})},n.exportPublicKey=function(e){return new Promise(function(r){window.crypto.subtle.exportKey("spki",e.publicKey).then(function(e){r(n.convertBinaryToPem(e,"RSA PUBLIC KEY"))})})},n.exportPrivateKey=function(e){return new Promise(function(r){var t=window.crypto.subtle.exportKey("pkcs8",e.privateKey);t.then(function(e){r(n.convertBinaryToPem(e,"RSA PRIVATE KEY"))})})},n.exportPemKeys=function(e){return new Promise(function(r){n.exportPublicKey(e).then(function(t){n.exportPrivateKey(e).then(function(e){r({publicKey:t,privateKey:e})})})})},n.signData=function(e,r){var t=n.textToArrayBuffer(r);return console.log(),window.crypto.subtle.sign(n.signAlgorithm,e,t)},n.verifySig=function(e,t,o){return o=n.textToArrayBuffer(o),r.subtle.verify(n.signAlgorithm,e,t,o)},"undefined"!=typeof exports?("undefined"!=typeof module&&module.exports&&(exports=module.exports=n),exports.$webCrypto=n):("function"==typeof define&&define.amd&&define([],function(){return n}),e.$webCrypto=n))}(this);
